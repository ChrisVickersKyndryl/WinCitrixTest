---

  # Services Expected (Expected behaviour: Running) ------------------------------------------------------------------------------------------------
  - name: Query using powershell to get services that should be running
    win_shell: |
      Get-Service -Displayname

      "Citrix Diagnostic Facility COM Server",
      "Citrix PVS Soap Server",
      "Citrix PVS Stream Service",
      "Citrix PVS TFTP Service",
      "Citrix PVS Two-Stage Boot Service",
      "Citrix Telemetry Service"
    register: status_of_services_running


  - name: Write Powershell response to file
    lineinfile:
      path: "/tmp/MyTest/Results.txt"
      line: |
        "Service Status for host '{{ ansible_hostname }}'"
        "{{ status_of_services_running.stdout }}"
        ""
        ""
      insertafter: EOF
    delegate_to: 127.0.0.1
    
  # Services (Expected behaviour: Stopped) ---------------------------------------------------------------------------------------------------------
  - name: Query using powershell to get services that should be stopped
    win_shell: |
      Get-Service -Displayname

      "Citrix PVS BOOTP Service",
      "Citrix PVS PXE Service"
    register: status_of_services_stopped

  - name: Write summary service status to file
    lineinfile:
      path: "/tmp/MyTest/Results.txt"
      line: |
        "Service Status for host '{{ ansible_hostname }}'"
        "{{ status_of_services_running.stdout }}"
        ""
        ""
      insertafter: EOF
    delegate_to: 127.0.0.1

  # Write a unregistered hosts to file
  - name: Write summary to file
    lineinfile:
      path: "/tmp/MyTest/Results.txt"
      line: |
        "Unregistered hosts output '{{ ansible_hostname }}'"
        "{{ status_unregistered_hosts.stdout }}"
        ""
        ""
      insertafter: EOF
    delegate_to: 127.0.0.1

  # Write summary to file if any value is not correct ---------------------------------------------------------------------------------
  - name: Write detailed results to temporary file
    copy: 
      content: "Error found"
      dest: "/tmp/MyTest/Summary.txt"
    delegate_to: 127.0.0.1
    when: |
      status_of_services_running is search("stopped")
      or
      ((status_of_services_stopped.stdout|regex_findall('stopped')|length) != 2)
